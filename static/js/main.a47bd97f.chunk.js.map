{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactsList/ContactsList.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["ContactForm","state","name","number","handleInput","e","console","log","currentTarget","value","target","setState","handleSubmit","preventDefault","newData","id","uuidv4","props","formSubmitHandler","resetState","className","s","contactForm","onSubmit","this","onChange","type","placeholder","pattern","title","required","React","Component","Filter","filter","handleInputName","Contacts","contacts","deleteContact","map","contact","onClick","App","data","find","alert","prevState","visibleContacts","normalizedFilter","toLowerCase","item","includes","parsedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","ContactsList","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a47bd97f.chunk.js","sourcesContent":["import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport s from \"./ContactForm.module.css\";\n\nexport default class ContactForm extends React.Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleInput = (e) => {\n    console.log(e.currentTarget.value);\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    const { name, number } = this.state;\n    e.preventDefault();\n\n    const newData = {\n      name,\n      number,\n      id: uuidv4(),\n    };\n    this.props.formSubmitHandler(newData);\n    this.resetState();\n  };\n\n  resetState = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <form className={s.contactForm} onSubmit={this.handleSubmit}>\n        <label>\n          Name:\n          <input\n            onChange={this.handleInput}\n            type=\"text\"\n            value={this.state.name}\n            name=\"name\"\n            placeholder=\"New contact name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label>\n          Number:\n          <input\n            onChange={this.handleInput}\n            type=\"tel\"\n            value={this.state.number}\n            name=\"number\"\n            placeholder=\"Number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button type=\"submit\">Отправить</button>\n      </form>\n    );\n  }\n}\n","const Filter = ({ filter, handleInputName }) => {\n  return (\n    <label>\n      Find contacts by name:\n      <input\n        onChange={handleInputName}\n        type=\"text\"\n        value={filter}\n        name=\"filter\"\n        placeholder=\"find name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","function Contacts({ contacts, deleteContact }) {\n  return (\n    <ul>\n      {contacts.map((contact) => (\n        <li key={contact.id}>\n          {contact.name}: {contact.number}\n          <button type=\"button\" onClick={() => deleteContact(contact)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactsList from \"./components/ContactsList/ContactsList\";\n\nexport default class App extends React.Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  formSubmitHandler = (data) => {\n    const findName = this.state.contacts.find((contact) => {\n      return contact.name === data.name;\n    });\n    !findName\n      ? this.setState((prevState) => ({\n          contacts: [data, ...prevState.contacts],\n        }))\n      : alert(`${data.name} is already in contact`);\n  };\n\n  handleInputName = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  visibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((item) =>\n      item.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  deleteContact = (data) => {\n    return this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== data.id),\n    }));\n  };\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n  render() {\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm formSubmitHandler={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter\n          filter={this.state.filter}\n          handleInputName={this.handleInputName}\n        />\n        <ContactsList\n          contacts={this.visibleContacts()}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__1uHX8\"};"],"sourceRoot":""}